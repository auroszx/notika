{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/welcome/welcome.ts","../../src/providers/user/user.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 110;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 110\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 152;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 152\n// module chunks = 0","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { UserProvider } from '../../providers/user/user';\nimport { ToastController } from 'ionic-angular';\n\n@Component({\n  selector: 'welcome',\n  templateUrl: 'welcome.html'\n})\nexport class WelcomePage {\n\n  loggedIn = false;\n  username: String;\n  password: String;\n  response: any;\n\n  constructor(public navCtrl: NavController, public user: UserProvider, private toastCtrl: ToastController) {\n\n  \t//Check if user was previously logged in.\n  \tif (localStorage.getItem(\"token\")) {\n  \t\tconsole.log(\"Already logged in.\");\n      this.loggedIn = true;\n  \t}\n  \telse {\n  \t\tconsole.log(\"Not logged in yet.\");\n  \t}\n\n  }\n\n  doToast(message) {\n    let toast = this.toastCtrl.create({\n          message: message,\n          duration: 3000,\n          position: 'bottom'\n        });\n  }\n\n  doLogin() {\n    this.user.login(this.username, this.password).subscribe(res => {\n      console.log(res);\n      this.response = res;\n      localStorage.setItem(\"token\", this.response.token);\n      if (this.response.status >= 400) {\n        this.doToast(this.response.message);\n      }\n    });\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/welcome/welcome.ts","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/*\n  Generated class for the UserProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class UserProvider {\n\n  constructor(public http: HttpClient) {\n    //Initialization?\n  }\n\n  login(username, password) {\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        //Authorization: token,\n        'Content-Type':'application/json'\n      })\n    };\n\n    let data = {\n        username: username,\n        password: password\n    };\n\n    return this.http.post('http://localhost:3000/user/login', JSON.stringify(data), httpOptions);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/user/user.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { WelcomePage } from '../pages/welcome/welcome';\nimport { UserProvider } from '../providers/user/user';\nimport { HttpClientModule } from '@angular/common/http'; \n\n@NgModule({\n  declarations: [\n    MyApp,\n    WelcomePage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    WelcomePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    UserProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { WelcomePage } from '../pages/welcome/welcome';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = WelcomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      splashScreen.show();\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}